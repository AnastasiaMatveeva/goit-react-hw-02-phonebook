{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","changeInput","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","contactForm","htmlFor","contactForm__label","type","contactForm__input","onChange","pattern","title","required","Component","ContactList","contacts","onDeleteContact","contactList","map","item","key","id","contactList__item","onClick","Filter","onChangeInput","App","filter","createContact","find","contact","alert","uuidv4","newContact","prevState","deleteContact","normilizedFilter","toLowerCase","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5cbf460.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__28Q5p\",\"contactForm__label\":\"ContactForm_contactForm__label__FFF5s\",\"contactForm__input\":\"ContactForm_contactForm__input__Lp2jJ\"};","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  changeInput = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.contactForm}>\r\n        <label htmlFor=\"name\" className={s.contactForm__label}>\r\n          Name\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            className={s.contactForm__input}\r\n            name=\"name\"\r\n            onChange={this.changeInput}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label htmlFor=\"number\" className={s.contactForm__label}>\r\n          Number\r\n          <br />\r\n          <input\r\n            type=\"tel\"\r\n            className={s.contactForm__input}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            onChange={this.changeInput}\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">AddContact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(item => (\r\n        <li key={item.id} className={s.contactList__item}>\r\n          {item.name}: {item.number}\r\n          <button type=\"button\" onClick={() => onDeleteContact(item.id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  array: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChangeInput }) => {\r\n  return (\r\n    <label htmlFor=\"filter\">\r\n      <h2>Filter contact by name</h2>\r\n      <input name=\"filter\" onChange={onChangeInput} value={value} />\r\n    </label>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeInput: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  changeInput = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n  createContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const isContactExist = contacts.find(contact => contact.name === name);\n    if (isContactExist) {\n      alert(`${name} is already axist in contacts`);\n      return;\n    }\n    const id = uuidv4();\n    const newContact = {\n      name,\n      number,\n      id: id,\n    };\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normilizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedFilter),\n    );\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.createContact} />\n        <div>\n          <h1>Contacts</h1>\n          <Filter value={this.filter} onChangeInput={this.changeInput} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList__item\":\"ContactList_contactList__item__1p8cR\"};"],"sourceRoot":""}